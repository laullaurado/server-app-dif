{
  "manifest": {
    "name": "pg-connection-string",
    "version": "2.6.2",
    "description": "Functions for dealing with a PostgresSQL connection string",
    "main": "./index.js",
    "types": "./index.d.ts",
    "scripts": {
      "test": "istanbul cover _mocha && npm run check-coverage",
      "check-coverage": "istanbul check-coverage --statements 100 --branches 100 --lines 100 --functions 100",
      "coveralls": "cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/brianc/node-postgres.git",
      "directory": "packages/pg-connection-string"
    },
    "keywords": [
      "pg",
      "connection",
      "string",
      "parse"
    ],
    "author": {
      "name": "Blaine Bublitz",
      "email": "blaine@iceddev.com",
      "url": "http://iceddev.com/"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/brianc/node-postgres/issues"
    },
    "homepage": "https://github.com/brianc/node-postgres/tree/master/packages/pg-connection-string",
    "devDependencies": {
      "chai": "^4.1.1",
      "coveralls": "^3.0.4",
      "istanbul": "^0.4.5",
      "mocha": "^7.1.2"
    },
    "files": [
      "index.js",
      "index.d.ts"
    ],
    "gitHead": "a2a355a6807bf75d92d7f0cb0f219588811a5356",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-pg-connection-string-2.6.2-integrity/node_modules/pg-connection-string/package.json",
    "readmeFilename": "README.md",
    "readme": "pg-connection-string\n====================\n\n[![NPM](https://nodei.co/npm/pg-connection-string.png?compact=true)](https://nodei.co/npm/pg-connection-string/)\n\n[![Build Status](https://travis-ci.org/iceddev/pg-connection-string.svg?branch=master)](https://travis-ci.org/iceddev/pg-connection-string)\n[![Coverage Status](https://coveralls.io/repos/github/iceddev/pg-connection-string/badge.svg?branch=master)](https://coveralls.io/github/iceddev/pg-connection-string?branch=master)\n\nFunctions for dealing with a PostgresSQL connection string\n\n`parse` method taken from [node-postgres](https://github.com/brianc/node-postgres.git)\nCopyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\nMIT License\n\n## Usage\n\n```js\nvar parse = require('pg-connection-string').parse;\n\nvar config = parse('postgres://someuser:somepassword@somehost:381/somedatabase')\n```\n\nThe resulting config contains a subset of the following properties:\n\n* `host` - Postgres server hostname or, for UNIX domain sockets, the socket filename\n* `port` - port on which to connect\n* `user` - User with which to authenticate to the server\n* `password` - Corresponding password\n* `database` - Database name within the server\n* `client_encoding` - string encoding the client will use\n* `ssl`, either a boolean or an object with properties\n  * `rejectUnauthorized`\n  * `cert`\n  * `key`\n  * `ca`\n* any other query parameters (for example, `application_name`) are preserved intact.\n\n## Connection Strings\n\nThe short summary of acceptable URLs is:\n\n * `socket:<path>?<query>` - UNIX domain socket\n * `postgres://<user>:<password>@<host>:<port>/<database>?<query>` - TCP connection\n\nBut see below for more details.\n\n### UNIX Domain Sockets\n\nWhen user and password are not given, the socket path follows `socket:`, as in `socket:/var/run/pgsql`.\nThis form can be shortened to just a path: `/var/run/pgsql`.\n\nWhen user and password are given, they are included in the typical URL positions, with an empty `host`, as in `socket://user:pass@/var/run/pgsql`.\n\nQuery parameters follow a `?` character, including the following special query parameters:\n\n * `db=<database>` - sets the database name (urlencoded)\n * `encoding=<encoding>` - sets the `client_encoding` property\n\n### TCP Connections\n\nTCP connections to the Postgres server are indicated with `pg:` or `postgres:` schemes (in fact, any scheme but `socket:` is accepted).\nIf username and password are included, they should be urlencoded.\nThe database name, however, should *not* be urlencoded.\n\nQuery parameters follow a `?` character, including the following special query parameters:\n * `host=<host>` - sets `host` property, overriding the URL's host\n * `encoding=<encoding>` - sets the `client_encoding` property\n * `ssl=1`, `ssl=true`, `ssl=0`, `ssl=false` - sets `ssl` to true or false, accordingly\n * `sslmode=<sslmode>`\n   * `sslmode=disable` - sets `ssl` to false\n   * `sslmode=no-verify` - sets `ssl` to `{ rejectUnauthorized: false }`\n   * `sslmode=prefer`, `sslmode=require`, `sslmode=verify-ca`, `sslmode=verify-full` - sets `ssl` to true\n * `sslcert=<filename>` - reads data from the given file and includes the result as `ssl.cert`\n * `sslkey=<filename>` - reads data from the given file and includes the result as `ssl.key`\n * `sslrootcert=<filename>` - reads data from the given file and includes the result as `ssl.ca`\n\nA bare relative URL, such as `salesdata`, will indicate a database name while leaving other properties empty.\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2014 Iced Development\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.6.2.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.6.2.tgz",
    "hash": "",
    "integrity": "sha512-ch6OwaeaPYcova4kKZ15sbJ2hKb/VP48ZD2gE7i1J+L4MspCtBMAx8nMgz7bksc7IojCIIWuEhHibSMFH8m8oA==",
    "registry": "npm",
    "packageName": "pg-connection-string",
    "cacheIntegrity": "sha512-ch6OwaeaPYcova4kKZ15sbJ2hKb/VP48ZD2gE7i1J+L4MspCtBMAx8nMgz7bksc7IojCIIWuEhHibSMFH8m8oA== sha1-cT2CBT3k4r0Wb6twzU8mrTaqtHU="
  },
  "registry": "npm",
  "hash": "721e8ec1a79a3d8728bdae24299d79b1b27684a6ff54fe3c643da013b8b527e2f832ca42b41300c7c9cc833edb92c73b2288c22085ae1211e26d23051fc9bca0"
}