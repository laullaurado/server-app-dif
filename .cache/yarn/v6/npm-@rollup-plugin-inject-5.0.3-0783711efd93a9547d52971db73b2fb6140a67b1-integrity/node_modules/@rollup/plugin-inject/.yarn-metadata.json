{
  "manifest": {
    "name": "@rollup/plugin-inject",
    "version": "5.0.3",
    "publishConfig": {
      "access": "public"
    },
    "description": "Scan modules for global variables and injects `import` statements where necessary",
    "license": "MIT",
    "repository": {
      "url": "https://github.com/rollup/plugins.git",
      "directory": "packages/inject"
    },
    "author": {
      "name": "Rich Harris",
      "email": "richard.a.harris@gmail.com"
    },
    "homepage": "https://github.com/rollup/plugins/tree/master/packages/inject#readme",
    "bugs": {
      "url": "https://github.com/rollup/plugins/issues"
    },
    "main": "./dist/cjs/index.js",
    "module": "./dist/es/index.js",
    "exports": {
      "types": "./types/index.d.ts",
      "import": "./dist/es/index.js",
      "default": "./dist/cjs/index.js"
    },
    "engines": {
      "node": ">=14.0.0"
    },
    "scripts": {
      "build": "rollup -c",
      "ci:coverage": "nyc pnpm test && nyc report --reporter=text-lcov > coverage.lcov",
      "ci:lint": "pnpm build && pnpm lint",
      "ci:lint:commits": "commitlint --from=${CIRCLE_BRANCH} --to=${CIRCLE_SHA1}",
      "ci:test": "pnpm test -- --verbose && pnpm test:ts",
      "prebuild": "del-cli dist",
      "prepare": "if [ ! -d 'dist' ]; then pnpm build; fi",
      "prerelease": "pnpm build",
      "pretest": "pnpm build",
      "release": "pnpm --workspace-root plugin:release --pkg $npm_package_name",
      "test": "ava",
      "test:ts": "tsc types/index.d.ts test/types.ts --noEmit"
    },
    "files": [
      "dist",
      "!dist/**/*.map",
      "types",
      "README.md",
      "LICENSE"
    ],
    "keywords": [
      "rollup",
      "plugin",
      "inject",
      "es2015",
      "npm",
      "modules"
    ],
    "peerDependencies": {
      "rollup": "^1.20.0||^2.0.0||^3.0.0"
    },
    "peerDependenciesMeta": {
      "rollup": {
        "optional": true
      }
    },
    "dependencies": {
      "@rollup/pluginutils": "^5.0.1",
      "estree-walker": "^2.0.2",
      "magic-string": "^0.27.0"
    },
    "devDependencies": {
      "@rollup/plugin-buble": "^1.0.0",
      "del-cli": "^5.0.0",
      "locate-character": "^2.0.5",
      "rollup": "^3.2.3",
      "source-map": "^0.7.4",
      "typescript": "^4.8.3"
    },
    "types": "./types/index.d.ts",
    "ava": {
      "files": [
        "!**/fixtures/**",
        "!**/helpers/**",
        "!**/recipes/**",
        "!**/types.ts"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-@rollup-plugin-inject-5.0.3-0783711efd93a9547d52971db73b2fb6140a67b1-integrity/node_modules/@rollup/plugin-inject/package.json",
    "readmeFilename": "README.md",
    "readme": "[npm]: https://img.shields.io/npm/v/@rollup/plugin-inject\n[npm-url]: https://www.npmjs.com/package/@rollup/plugin-inject\n[size]: https://packagephobia.now.sh/badge?p=@rollup/plugin-inject\n[size-url]: https://packagephobia.now.sh/result?p=@rollup/plugin-inject\n\n[![npm][npm]][npm-url]\n[![size][size]][size-url]\n[![libera manifesto](https://img.shields.io/badge/libera-manifesto-lightgrey.svg)](https://liberamanifesto.com)\n\n# @rollup/plugin-inject\n\nüç£ A Rollup plugin which scans modules for global variables and injects `import` statements where necessary.\n\n## Requirements\n\nThis plugin requires an [LTS](https://github.com/nodejs/Release) Node version (v14.0.0+) and Rollup v1.20.0+.\n\n## Install\n\nUsing npm:\n\n```console\nnpm install @rollup/plugin-inject --save-dev\n```\n\n## Usage\n\nCreate a `rollup.config.js` [configuration file](https://www.rollupjs.org/guide/en/#configuration-files) and import the plugin:\n\n```js\nimport inject from '@rollup/plugin-inject';\n\nexport default {\n  input: 'src/index.js',\n  output: {\n    dir: 'output',\n    format: 'cjs'\n  },\n  plugins: [\n    inject({\n      Promise: ['es6-promise', 'Promise']\n    })\n  ]\n};\n```\n\nThen call `rollup` either via the [CLI](https://www.rollupjs.org/guide/en/#command-line-reference) or the [API](https://www.rollupjs.org/guide/en/#javascript-api).\n\nThis configuration above will scan all your files for global Promise usage and plugin will add import to desired module (`import { Promise } from 'es6-promise'` in this case).\n\nExamples:\n\n```js\n{\n  // import { Promise } from 'es6-promise'\n  Promise: [ 'es6-promise', 'Promise' ],\n\n  // import { Promise as P } from 'es6-promise'\n  P: [ 'es6-promise', 'Promise' ],\n\n  // import $ from 'jquery'\n  $: 'jquery',\n\n  // import * as fs from 'fs'\n  fs: [ 'fs', '*' ],\n\n  // use a local module instead of a third-party one\n  'Object.assign': path.resolve( 'src/helpers/object-assign.js' ),\n}\n```\n\nTypically, `@rollup/plugin-inject` should be placed in `plugins` _before_ other plugins so that they may apply optimizations, such as dead code removal.\n\n## Options\n\nIn addition to the properties and values specified for injecting, users may also specify the options below.\n\n### `exclude`\n\nType: `String` | `Array[...String]`<br>\nDefault: `null`\n\nA [picomatch pattern](https://github.com/micromatch/picomatch), or array of patterns, which specifies the files in the build the plugin should _ignore_. By default no files are ignored.\n\n### `include`\n\nType: `String` | `Array[...String]`<br>\nDefault: `null`\n\nA [picomatch pattern](https://github.com/micromatch/picomatch), or array of patterns, which specifies the files in the build the plugin should operate on. By default all files are targeted.\n\n## Meta\n\n[CONTRIBUTING](/.github/CONTRIBUTING.md)\n\n[LICENSE (MIT)](/LICENSE)\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@rollup/plugin-inject/-/plugin-inject-5.0.3.tgz#0783711efd93a9547d52971db73b2fb6140a67b1",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@rollup/plugin-inject/-/plugin-inject-5.0.3.tgz",
    "hash": "0783711efd93a9547d52971db73b2fb6140a67b1",
    "integrity": "sha512-411QlbL+z2yXpRWFXSmw/teQRMkXcAAC8aYTemc15gwJRpvEVDQwoe+N/HTFD8RFG8+88Bme9DK2V9CVm7hJdA==",
    "registry": "npm",
    "packageName": "@rollup/plugin-inject",
    "cacheIntegrity": "sha512-411QlbL+z2yXpRWFXSmw/teQRMkXcAAC8aYTemc15gwJRpvEVDQwoe+N/HTFD8RFG8+88Bme9DK2V9CVm7hJdA== sha1-B4NxHv2TqVR9UpcdtzsvthQKZ7E="
  },
  "registry": "npm",
  "hash": "0783711efd93a9547d52971db73b2fb6140a67b1"
}