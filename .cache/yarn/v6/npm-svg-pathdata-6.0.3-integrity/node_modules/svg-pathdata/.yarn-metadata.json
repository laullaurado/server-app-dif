{
  "manifest": {
    "name": "svg-pathdata",
    "version": "6.0.3",
    "description": "Manipulate SVG path data (path[d] attribute content) simply and efficiently.",
    "main": "lib/SVGPathData.cjs",
    "module": "lib/SVGPathData.module.js",
    "exports": {
      "import": "./lib/SVGPathData.module.js",
      "require": "./lib/SVGPathData.cjs"
    },
    "type": "module",
    "types": "lib/SVGPathData.d.ts",
    "scripts": {
      "changelog": "conventional-changelog -p angular -i CHANGELOG.md -s",
      "cli": "env NODE_ENV=${NODE_ENV:-cli}",
      "cover": "istanbul cover _mocha --report html -- tests/*.mocha.js -R spec -t 5000",
      "coveralls": "istanbul cover _mocha --report lcovonly -- tests/*.mocha.js -R spec -t 5000 && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage",
      "cz": "env NODE_ENV=${NODE_ENV:-cli} git cz",
      "lint": "eslint tests/*.mocha.js && tslint -p tsconfig.json",
      "preversion": "npm run test:ci",
      "test": "mocha tests/*.mocha.js",
      "version": "npm run changelog && git add CHANGELOG.md",
      "test:ci": "npm run lint && npm run build && npm run test",
      "build": "rollup -c rollup.config.js",
      "watch": "rollup -c rollup.config.js -w"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/nfroidure/svg-pathdata.git"
    },
    "keywords": [
      "svg",
      "path",
      "data",
      "parser",
      "encoder",
      "transformer",
      "reader",
      "writer",
      "stream",
      "typescript"
    ],
    "author": {
      "name": "Nicolas Froidure"
    },
    "contributors": [
      {
        "name": "Anders Kaseorg",
        "email": "andersk@mit.edu"
      }
    ],
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/nfroidure/SVGPathData/issues"
    },
    "engines": {
      "node": ">=12.0.0"
    },
    "devDependencies": {
      "@rollup/plugin-typescript": "^8.2.1",
      "chai": "^4.3.4",
      "chai-stats": "^0.3.0",
      "commitizen": "^4.2.3",
      "conventional-changelog-cli": "^2.1.1",
      "coveralls": "^3.1.0",
      "cz-conventional-changelog": "^3.3.0",
      "eslint": "^7.23.0",
      "eslint-config-simplifield": "^12.0.0",
      "istanbul": "0.4.5",
      "mocha": "^9.0.2",
      "mocha-lcov-reporter": "1.3.0",
      "rollup": "^2.44.0",
      "rollup-plugin-terser": "^7.0.2",
      "tslib": "2.1.0",
      "tslint": "^6.1.3",
      "typescript": "^4.2.3"
    },
    "config": {
      "commitizen": {
        "path": "./node_modules/cz-conventional-changelog"
      }
    },
    "greenkeeper": {
      "ignore": [
        "debug",
        "eslint",
        "eslint-config-simplifield",
        "mocha",
        "mocha-lcov-reporter",
        "commitizen",
        "cz-conventional-changelog",
        "coveralls",
        "istanbul",
        "conventional-changelog-cli"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-svg-pathdata-6.0.3-integrity/node_modules/svg-pathdata/package.json",
    "readmeFilename": "README.md",
    "readme": "# svg-pathdata\n> Manipulate SVG path data (path[d] attribute content) simply and efficiently.\n\n[![NPM version](https://badge.fury.io/js/svg-pathdata.svg)](https://npmjs.org/package/svg-pathdata)\n[![Run tests](https://github.com/nfroidure/svg-pathdata/actions/workflows/test.yml/badge.svg)](https://github.com/nfroidure/svg-pathdata/actions/workflows/test.yml)\n[![Dependency Status](https://david-dm.org/nfroidure/svg-pathdata.svg)](https://david-dm.org/nfroidure/svg-pathdata)\n[![devDependency Status](https://david-dm.org/nfroidure/svg-pathdata/dev-status.svg)](https://david-dm.org/nfroidure/svg-pathdata#info=devDependencies)\n[![Coverage Status](https://coveralls.io/repos/nfroidure/svg-pathdata/badge.svg?branch=master)](https://coveralls.io/r/nfroidure/svg-pathdata?branch=master)\n[![Code Climate](https://codeclimate.com/github/nfroidure/svg-pathdata.svg)](https://codeclimate.com/github/nfroidure/svg-pathdata)\n[![Dependency Status](https://dependencyci.com/github/nfroidure/svg-pathdata/badge)](https://dependencyci.com/github/nfroidure/svg-pathdata)\n\n## Usage\n\nInstall the module:\n```sh\nnpm install --save svg-pathdata\n```\nor add the [bundle](https://github.com/nfroidure/svg-pathdata/blob/master/lib/SVGPathData.js) to a script in your HTML.\n\nThen in your JavaScript files:\n```js\nconst {SVGPathData, SVGPathDataTransformer, SVGPathDataEncoder, SVGPathDataParser} = require('svg-pathdata');\n```\n\nWith import syntax in TypeScript/ES6:\n```ts\nimport {SVGPathData, SVGPathDataTransformer, SVGPathDataEncoder, SVGPathDataParser} from 'svg-pathdata';\n```\n\nWithout modules, using the global in the bundle:\n```js\nconst {SVGPathData, SVGPathDataTransformer, SVGPathDataEncoder, SVGPathDataParser} = svgpathdata;\n```\n\n\n## Reading PathData\n```js\nconst pathData = new SVGPathData (`\n  M 10 10\n  H 60\n  V 60\n  L 10 60\n  Z`);\n\n\nconsole.log(pathData.commands);\n\n\n// [  {type: SVGPathData.MOVE_TO,       relative: false,  x: 10,  y: 10},\n//    {type: SVGPathData.HORIZ_LINE_TO, relative: false,  x: 60},\n//    {type: SVGPathData.VERT_LINE_TO,  relative: false,          y: 60},\n//    {type: SVGPathData.LINE_TO,       relative: false,  x: 10,  y: 60},\n//    {type: SVGPathData.CLOSE_PATH}]\n```\n\n## Reading PathData in chunks\n```js\nconst parser = new SVGPathDataParser();\n\nparser.parse('   '); // returns []\nparser.parse('M 10'); // returns []\nparser.parse(' 10'); // returns [{type: SVGPathData.MOVE_TO, relative: false, x: 10, y: 10 }]\n\nparser.write('H 60'); // returns [{type: SVGPathData.HORIZ_LINE_TO, relative: false, x: 60 }]\n\nparser.write('V'); // returns []\nparser.write('60'); // returns [{type: SVGPathData.VERT_LINE_TO, relative: false, y: 60 }]\n\nparser.write('L 10 60 \\n  Z');\n// returns [\n//   {type: SVGPathData.LINE_TO, relative: false, x: 10, y: 60 },\n//   {type: SVGPathData.CLOSE_PATH }]\n\nparser.finish(); // tell parser there is no more data: will throw if there are unfinished commands.\n```\n\n## Outputting PathData\n```js\nconst pathData = new SVGPathData (`\n  M 10 10\n  H 60\n  V 60\n  L 10 60\n  Z`);\n// returns \"M10 10H60V60L10 60Z\"\n\nencodeSVGPath({ type: SVGPathData.MOVE_TO,       relative: false, x: 10, y: 10 });\n// returns \"M10 10\"\n\nencodeSVGPath({ type: SVGPathData.HORIZ_LINE_TO, relative: false, x: 60 });\n// returns \"H60\"\n\nencodeSVGPath([\n  { type: SVGPathData.VERT_LINE_TO,  relative: false,        y: 60 },\n  { type: SVGPathData.LINE_TO,       relative: false, x: 10, y: 60 },\n  { type: SVGPathData.CLOSE_PATH}])\n// returns \"V60L10 60Z\"\n\n```\n\n## Transforming PathData\nThis library can perform transformations on SVG paths. Here is\n [an example of that kind of use](https://github.com/nfroidure/svgicons2svgfont/blob/aa6df0211419e9d61c417c63bcc353f0cb2ea0c8/src/index.js#L192).\n\n### Transforming entire paths\n```js\n  new SVGPathData (`\n   m 10,10\n   h 60\n   v 60\n   l 10,60\n   z`)\n  .toAbs()\n  .encode();\n// return s\"M10,10 H70 V70 L80,130 Z\"\n```\n\n### Transforming partial data\nHere, we take SVGPathData from stdin and output it transformed to stdout.\n```js\nconst transformingParser = new SVGPathDataParser().toAbs().scale(2, 2);\ntransformingParser.parse('m 0 0') // returns [{ type: SVGPathData.MOVE_TO,       relative: false, x: 0, y: 0 }]\ntransformingParser.parse('l 2 3') // returns [{ type: SVGPathData.LINE_TO,       relative: false, x: 4, y: 6 }]\n```\n\n## Supported transformations\nYou can find all supported transformations in\n [src/SVGPathDataTransformer.ts](https://github.com/nfroidure/SVGPathData/blob/master/src/SVGPathDataTransformer.ts#L47).\n Additionally, you can create your own by writing a function with the following signature:\n```js\ntype TransformFunction = (command: SVGCommand) => SVGCommand | SVGCommand[];\n\nfunction SET_X_TO(xValue = 10) {\n  return function(command) {\n    command.x = xValue; // transform command objects and return them\n    return command;\n  };\n};\n\n// Synchronous usage\nnew SVGPathData('...')\n  .transform(SET_X_TO(25))\n  .encode();\n\n// Chunk usage\nnew SVGPathDataParser().transform(SET_X_TO(25));\n```\n\n\n## Stats\n\n[![NPM](https://nodei.co/npm/svg-pathdata.png?downloads=true&stars=true)](https://nodei.co/npm/svg-pathdata/)\n[![NPM](https://nodei.co/npm-dl/svg-pathdata.png)](https://nodei.co/npm/svg-pathdata/)\n\n## Contributing\nClone this project, run:\n```sh\nnpm install; npm test\n```\n\n# License\n[MIT](https://github.com/nfroidure/svg-pathdata/blob/master/LICENSE)\n",
    "licenseText": "The MIT License (MIT)\nCopyright © 2017 Nicolas Froidure\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the “Software”), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/svg-pathdata/-/svg-pathdata-6.0.3.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/svg-pathdata/-/svg-pathdata-6.0.3.tgz",
    "hash": "",
    "integrity": "sha512-qsjeeq5YjBZ5eMdFuUa4ZosMLxgr5RZ+F+Y1OrDhuOCEInRMA3x74XdBtggJcj9kOeInz0WE+LgCPDkZFlBYJw==",
    "registry": "npm",
    "packageName": "svg-pathdata",
    "cacheIntegrity": "sha512-qsjeeq5YjBZ5eMdFuUa4ZosMLxgr5RZ+F+Y1OrDhuOCEInRMA3x74XdBtggJcj9kOeInz0WE+LgCPDkZFlBYJw== sha1-gLDgKDtlLMuvtprU+Pc+jT+/LKw="
  },
  "registry": "npm",
  "hash": "aac8de7aae588c167978c745b946b8668b0c2f182be5167e17e6353ab0e1b8e08422744c037c7be17741b60809723f6439e227cf4584f8b8023c391916505827"
}