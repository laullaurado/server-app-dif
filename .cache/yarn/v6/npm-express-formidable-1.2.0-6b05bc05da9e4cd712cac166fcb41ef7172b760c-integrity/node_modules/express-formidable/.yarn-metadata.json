{
  "manifest": {
    "name": "express-formidable",
    "version": "1.2.0",
    "description": "An Express middleware of Formidable that just works.",
    "author": {
      "name": "Jun",
      "email": "me@noraesae.net"
    },
    "main": "./lib/middleware.js",
    "engines": {
      "node": ">= 8"
    },
    "scripts": {
      "test": "eslint . && jest test/middleware.test.js --forceExit --detectOpenHandles"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/noraesae/express-formidable.git"
    },
    "keywords": [
      "express",
      "middleware",
      "formidable"
    ],
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/noraesae/express-formidable/issues"
    },
    "homepage": "https://github.com/noraesae/express-formidable",
    "dependencies": {
      "formidable": "^1.0.17"
    },
    "devDependencies": {
      "eslint": "^3.7.1",
      "eslint-config-airbnb-base": "^8.0.0",
      "eslint-plugin-import": "^1.16.0",
      "express": "^4.14.0",
      "jest": "^23.6.0",
      "request": "^2.88.0"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-express-formidable-1.2.0-6b05bc05da9e4cd712cac166fcb41ef7172b760c-integrity/node_modules/express-formidable/package.json",
    "readmeFilename": "README.md",
    "readme": "# express-formidable [![Build Status](https://travis-ci.org/noraesae/express-formidable.svg?branch=master)](https://travis-ci.org/noraesae/express-formidable)\n\nAn [Express](http://expressjs.com) middleware of\n[Formidable](https://github.com/felixge/node-formidable) that just works.\n\n## What are Express, Formidable, and this?\n\n[Express](http://expressjs.com) is a fast, unopinionated, minimalist web\nframework for Node.js.\n\n[Formidable](https://github.com/felixge/node-formidable) is a Node.js module\nfor parsing form data, including `multipart/form-data` file upload.\n\nSo, **`express-formidable`** is something like a bridge between them,\nspecifically an Express middleware implementation of Formidable.\n\nIt aims to just work.\n\n## Install\n\n```\nnpm install express-formidable\n```\n\n## How to use\n\n```js\nconst express = require('express');\nconst formidableMiddleware = require('express-formidable');\n\nvar app = express();\n\napp.use(formidableMiddleware());\n\napp.post('/upload', (req, res) => {\n  req.fields; // contains non-file fields\n  req.files; // contains files\n});\n```\n\nAnd that's it.\n\nexpress-formidable can basically parse form types Formidable can handle,\nincluding `application/x-www-form-urlencoded`, `application/json`, and\n`multipart/form-data`.\n\n## Option\n\n```js\napp.use(formidableMiddleware(opts));\n```\n\n`opts` are options which can be set to `form` in Formidable. For example:\n\n```js\napp.use(formidableMiddleware({\n  encoding: 'utf-8',\n  uploadDir: '/my/dir',\n  multiples: true, // req.files to be arrays of files\n});\n```\n\nFor the detail, please refer to the\n[Formidable API](https://github.com/felixge/node-formidable#api).\n\n## Events\n\n```js\napp.use(formidableMiddleware(opts, events));\n```\n\n`events` is an array of json with two field:\n\n| Field | Description |\n| ----- | ----------- |\n| `event` | The event emitted by the form of formidable. A complete list of all the possible events, please refer to the [Formidable Events](https://github.com/felixge/node-formidable#events) |\n| `action` | The callback to execute. The signature is `function (req, res, next, ...formidable_parameters)` |\n\nFor example:\n\n```js\nconst events = [\n  {\n    event: 'fileBegin',\n    action: function (req, res, next, name, file) { /* your callback */ }\n  }, \n  {\n    event: 'field',\n    action: function (req, res, next, name, value) { /* your callback */ }\n  }\n];\n```\n\n### Error event\n\nUnless an `error` event are provided by the `events` array parameter, it will handle by the standard `next(error)`.\n\n## Contribute\n\n```\ngit clone https://github.com/noraesae/express-formidable.git\ncd express-formidable\nnpm install\n```\n\nTo lint and test:\n\n```\nnpm test\n```\n\n## License\n\n[MIT](LICENSE)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jun\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/express-formidable/-/express-formidable-1.2.0.tgz#6b05bc05da9e4cd712cac166fcb41ef7172b760c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/express-formidable/-/express-formidable-1.2.0.tgz",
    "hash": "6b05bc05da9e4cd712cac166fcb41ef7172b760c",
    "integrity": "sha512-w1vXjF3gb50UKTNkFaW8/4rqY4dUrKfZ1sAZzwAF9YxCAgj/29QZsycf71di0GkskrZOAkubk9pvGYfxyAMYiw==",
    "registry": "npm",
    "packageName": "express-formidable",
    "cacheIntegrity": "sha512-w1vXjF3gb50UKTNkFaW8/4rqY4dUrKfZ1sAZzwAF9YxCAgj/29QZsycf71di0GkskrZOAkubk9pvGYfxyAMYiw== sha1-awW8BdqeTNcSysFm/LQe9xcrdgw="
  },
  "registry": "npm",
  "hash": "6b05bc05da9e4cd712cac166fcb41ef7172b760c"
}