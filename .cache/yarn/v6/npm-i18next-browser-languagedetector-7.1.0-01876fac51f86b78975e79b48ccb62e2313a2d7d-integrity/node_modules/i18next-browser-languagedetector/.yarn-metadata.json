{
  "manifest": {
    "name": "i18next-browser-languagedetector",
    "version": "7.1.0",
    "description": "language detector used in browser environment for i18next",
    "main": "./dist/cjs/i18nextBrowserLanguageDetector.js",
    "module": "./dist/esm/i18nextBrowserLanguageDetector.js",
    "types": "./index.d.ts",
    "exports": {
      "./package.json": "./package.json",
      ".": {
        "types": "./index.d.ts",
        "module": "./dist/esm/i18nextBrowserLanguageDetector.js",
        "import": "./dist/esm/i18nextBrowserLanguageDetector.js",
        "require": "./dist/cjs/i18nextBrowserLanguageDetector.js",
        "default": "./dist/esm/i18nextBrowserLanguageDetector.js"
      },
      "./cjs": {
        "types": "./index.d.ts",
        "default": "./dist/cjs/i18nextBrowserLanguageDetector.js"
      },
      "./esm": {
        "types": "./index.d.ts",
        "default": "./dist/esm/i18nextBrowserLanguageDetector.js"
      }
    },
    "keywords": [
      "i18next",
      "i18next-languageDetector"
    ],
    "homepage": "https://github.com/i18next/i18next-browser-languageDetector",
    "bugs": {
      "url": "https://github.com/i18next/i18next-browser-languageDetector/issues"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/i18next/i18next-browser-languageDetector.git"
    },
    "dependencies": {
      "@babel/runtime": "^7.19.4"
    },
    "devDependencies": {
      "@babel/core": "^7.19.6",
      "@babel/plugin-transform-runtime": "^7.19.6",
      "@babel/preset-env": "^7.19.4",
      "@babel/eslint-parser": "^7.19.1",
      "babel-polyfill": "^6.26.0",
      "babelify": "^10.0.0",
      "browserify": "17.0.0",
      "browserify-istanbul": "3.0.1",
      "chai": "4.3.6",
      "coveralls": "3.1.1",
      "cpy-cli": "^4.2.0",
      "dtslint": "^4.2.1",
      "eslint": "8.26.0",
      "eslint-config-airbnb": "19.0.4",
      "expect.js": "0.3.1",
      "i18next": "23.2.3",
      "mkdirp": "1.0.4",
      "mocha": "10.1.0",
      "rimraf": "3.0.2",
      "rollup": "^2.79.1",
      "@rollup/plugin-babel": "^5.3.1",
      "@rollup/plugin-node-resolve": "^14.1.0",
      "rollup-plugin-terser": "^7.0.2",
      "tslint": "^5.20.1",
      "tsd": "0.24.1",
      "typescript": "^4.8.4",
      "yargs": "17.6.0"
    },
    "scripts": {
      "lint": "eslint src",
      "pretest": "npm run lint && npm run test:typescript && npm run test:typescript:noninterop",
      "test": "npm run build && mocha test -R spec --exit",
      "test:typescript": "tslint --project tsconfig.json && tsd",
      "test:typescript:noninterop": "tslint --project tsconfig.nonEsModuleInterop.json",
      "build": "rimraf dist && rollup -c && echo '{\"type\":\"module\"}' > dist/esm/package.json  && cpy \"./dist/umd/*.js\" ./",
      "fix_dist_package": "node -e 'console.log(`{\"type\":\"module\",\"version\":\"${process.env.npm_package_version}\"}`)' > dist/esm/package.json",
      "preversion": "npm run test && npm run build && git push",
      "postversion": "npm run fix_dist_package && git push && git push --tags"
    },
    "tsd": {
      "directory": "test/typescript"
    },
    "author": {
      "name": "Jan MÃ¼hlemann",
      "email": "jan.muehlemann@gmail.com",
      "url": "https://github.com/jamuhl"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-i18next-browser-languagedetector-7.1.0-01876fac51f86b78975e79b48ccb62e2313a2d7d-integrity/node_modules/i18next-browser-languagedetector/package.json",
    "readmeFilename": "README.md",
    "readme": "# Introduction\n\n[![npm version](https://img.shields.io/npm/v/i18next-browser-languagedetector.svg?style=flat-square)](https://www.npmjs.com/package/i18next-browser-languagedetector)\n\nThis is a i18next language detection plugin use to detect user language in the browser with support for:\n\n- cookie (set cookie i18next=LANGUAGE)\n- sessionStorage (set key i18nextLng=LANGUAGE)\n- localStorage (set key i18nextLng=LANGUAGE)\n- navigator (set browser language)\n- querystring (append `?lng=LANGUAGE` to URL)\n- htmlTag (add html language tag <html lang=\"LANGUAGE\" ...)\n- path (http://my.site.com/LANGUAGE/...)\n- subdomain (http://LANGUAGE.site.com/...)\n\n# Getting started\n\nSource can be loaded via [npm](https://www.npmjs.com/package/i18next-browser-languagedetector), bower or [downloaded](https://github.com/i18next/i18next-browser-languagedetector/blob/master/i18nextBrowserLanguageDetector.min.js) from this repo.\n\n```\n# npm package\n$ npm install i18next-browser-languagedetector\n\n# bower\n$ bower install i18next-browser-languagedetector\n```\n\n- If you don't use a module loader it will be added to `window.i18nextBrowserLanguageDetector`\n\nWiring up:\n\n```js\nimport i18next from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18next.use(LanguageDetector).init(i18nextOptions);\n```\n\nAs with all modules you can either pass the constructor function (class) to the i18next.use or a concrete instance.\n\n## Detector Options\n*The default options can be found [here](https://github.com/i18next/i18next-browser-languageDetector/blob/9efebe6ca0271c3797bc09b84babf1ba2d9b4dbb/src/index.js#L11).*\n\n```js\n{\n  // order and from where user language should be detected\n  order: ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n\n  // keys or params to lookup language from\n  lookupQuerystring: 'lng',\n  lookupCookie: 'i18next',\n  lookupLocalStorage: 'i18nextLng',\n  lookupSessionStorage: 'i18nextLng',\n  lookupFromPathIndex: 0,\n  lookupFromSubdomainIndex: 0,\n\n  // cache user language on\n  caches: ['localStorage', 'cookie'],\n  excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\n\n  // optional expire and domain for set cookie\n  cookieMinutes: 10,\n  cookieDomain: 'myDomain',\n\n  // optional htmlTag with lang attribute, the default is:\n  htmlTag: document.documentElement,\n\n  // optional set cookie options, reference:[MDN Set-Cookie docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie)\n  cookieOptions: { path: '/', sameSite: 'strict' },\n\n  // optional conversion function to use to modify the detected language code\n  convertDetectedLanguage: 'Iso15897',\n  convertDetectedLanguage: (lng) => lng.replace('-', '_')\n}\n```\n\nOptions can be passed in:\n\n**preferred** - by setting options.detection in i18next.init:\n\n```js\nimport i18next from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18next.use(LanguageDetector).init({\n  detection: options,\n});\n```\n\non construction:\n\n```js\nimport LanguageDetector from 'i18next-browser-languagedetector';\nconst languageDetector = new LanguageDetector(null, options);\n```\n\nvia calling init:\n\n```js\nimport LanguageDetector from 'i18next-browser-languagedetector';\nconst languageDetector = new LanguageDetector();\nlanguageDetector.init(options);\n```\n\n## Adding own detection functionality\n\n### interface\n\n```js\nexport default {\n  name: 'myDetectorsName',\n\n  lookup(options) {\n    // options -> are passed in options\n    return 'en';\n  },\n\n  cacheUserLanguage(lng, options) {\n    // options -> are passed in options\n    // lng -> current language, will be called after init and on changeLanguage\n    // store it\n  },\n};\n```\n\n### adding it\n\n```js\nimport LanguageDetector from 'i18next-browser-languagedetector';\nconst languageDetector = new LanguageDetector();\nlanguageDetector.addDetector(myDetector);\n\ni18next.use(languageDetector).init({\n  detection: options,\n});\n```\n\nDon't forget: You have to add the name of your detector (`myDetectorsName` in this case) to the `order` array in your `options` object. Without that, your detector won't be used. See the [Detector Options section for more](#detector-options).\n\n---\n\n<h3 align=\"center\">Gold Sponsors</h3>\n\n<p align=\"center\">\n  <a href=\"https://locize.com/\" target=\"_blank\">\n    <img src=\"https://raw.githubusercontent.com/i18next/i18next/master/assets/locize_sponsor_240.gif\" width=\"240px\">\n  </a>\n</p>\n\n---\n\n**localization as a service - locize.com**\n\nNeeding a translation management? Want to edit your translations with an InContext Editor? Use the orginal provided to you by the maintainers of i18next!\n\n![locize](https://locize.com/img/ads/github_locize.png)\n\nWith using [locize](http://locize.com/?utm_source=react_i18next_readme&utm_medium=github) you directly support the future of i18next and react-i18next.\n\n---\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2023 i18next\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/i18next-browser-languagedetector/-/i18next-browser-languagedetector-7.1.0.tgz#01876fac51f86b78975e79b48ccb62e2313a2d7d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/i18next-browser-languagedetector/-/i18next-browser-languagedetector-7.1.0.tgz",
    "hash": "01876fac51f86b78975e79b48ccb62e2313a2d7d",
    "integrity": "sha512-cr2k7u1XJJ4HTOjM9GyOMtbOA47RtUoWRAtt52z43r3AoMs2StYKyjS3URPhzHaf+mn10hY9dZWamga5WPQjhA==",
    "registry": "npm",
    "packageName": "i18next-browser-languagedetector",
    "cacheIntegrity": "sha512-cr2k7u1XJJ4HTOjM9GyOMtbOA47RtUoWRAtt52z43r3AoMs2StYKyjS3URPhzHaf+mn10hY9dZWamga5WPQjhA== sha1-AYdvrFH4a3iXXnm0jMti4jE6LX0="
  },
  "registry": "npm",
  "hash": "01876fac51f86b78975e79b48ccb62e2313a2d7d"
}