{
  "manifest": {
    "name": "react-text-mask",
    "version": "5.5.0",
    "description": "React input component that accepts mask pattern",
    "main": "dist/reactTextMask.js",
    "author": {
      "name": "M.K. Safi",
      "email": "msafi@msafi.com"
    },
    "license": "Unlicense",
    "bugs": {
      "url": "https://github.com/text-mask/text-mask/issues"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/text-mask/text-mask.git"
    },
    "homepage": "https://github.com/text-mask/text-mask/tree/master/react/#readme",
    "peerDependencies": {
      "react": "^0.14.0 || ^15.0.0 || ^16.0.0 || ^17.0.0 || ^18.0.0"
    },
    "babel": {
      "presets": [
        "env",
        "react",
        "stage-0"
      ]
    },
    "keywords": [
      "react",
      "react-component",
      "text mask",
      "input mask",
      "string mask",
      "input formatting",
      "text formatting",
      "string formatting"
    ],
    "dependencies": {
      "prop-types": "^15.5.6"
    },
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-react-text-mask-5.5.0-integrity/node_modules/react-text-mask/package.json",
    "readmeFilename": "README.md",
    "readme": "# React Input Mask\n\n## Getting started\n\nFirst, install it.\n\n```bash\nnpm i react-text-mask --save\n```\n\nThen, require it and use it.\n\n```js\nimport React from 'react'\nimport MaskedInput from 'react-text-mask'\n\nexport default () => (\n  <div>\n    <MaskedInput\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n    />\n  </div>\n)\n```\n\n`<MaskedInput/>` is fully compatible with `<input/>` element. So, you can\npass it CSS classes, a placeholder attribute, or even an `onBlur` handler.\n\nFor example, the following works:\n\n```js\n<MaskedInput\n  mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n  className=\"form-control\"\n  placeholder=\"Enter a phone number\"\n  guide={false}\n  id=\"my-input-id\"\n  onBlur={() => {}}\n  onChange={() => {}}\n/>\n```\n\n## Documentation\n\nFor more information about the `props` that you can pass to the component, see\nthe [documentation here](https://github.com/text-mask/text-mask/blob/master/componentDocumentation.md#readme).\n\n## Example\n\nTo see an example of the code running, follow these steps:\n\n1. Clone the repo, `git clone git@github.com:text-mask/text-mask.git`\n1. `cd text-mask`\n1. `npm install`\n1. `npm run react:dev`\n1. Open [http://localhost:3000](http://localhost:3000)\n\nThe code of the example is in [`react/example`](https://github.com/text-mask/text-mask/tree/master/react/example).\n\n## Customize Rendered `<input>` Component\n\nFor advanced uses, you can customize the rendering of the resultant `<input>` via a render prop.\nThis is entirely optional, if no `render` prop is passed, a normal `<input>` is rendered.\n\nFor example, to use with styled-components,\n[which requires an innerRef](https://www.styled-components.com/docs/advanced#refs):\n\n```js\n<MaskedInput\n  mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n  placeholder=\"Enter a phone number\"\n  id=\"my-input-id\"\n  render={(ref, props) => (\n    <MyStyledInput innerRef={ref} {...props} />\n  )}\n/>\n\nconst MyStyledInput = styled.input`\n  background: papayawhip;\n`;\n```\n\n## Contributing\n\nWe would love some contributions! Check out [this document](https://github.com/text-mask/text-mask/blob/master/howToContribute.md#readme) to get started.\n",
    "licenseText": "This is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to <http://unlicense.org>\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.npmjs.org/react-text-mask/-/react-text-mask-5.5.0.tgz",
    "type": "tarball",
    "reference": "https://registry.npmjs.org/react-text-mask/-/react-text-mask-5.5.0.tgz",
    "hash": "",
    "integrity": "sha512-SLJlJQxa0uonMXsnXRpv5abIepGmHz77ylQcra0GNd7Jtk4Wj2Mtp85uGQHv1avba2uI8ZvRpIEQPpJKsqRGYw==",
    "registry": "npm",
    "packageName": "react-text-mask",
    "cacheIntegrity": "sha512-SLJlJQxa0uonMXsnXRpv5abIepGmHz77ylQcra0GNd7Jtk4Wj2Mtp85uGQHv1avba2uI8ZvRpIEQPpJKsqRGYw== sha1-Ro6mkBYLNkmBIF9WM+dHXpOTg/8="
  },
  "registry": "npm",
  "hash": "48b265250c5ad2ea27317b275d1a6fe5a6c87a91a61f3efbca541cadad0635dec9b64e168f632da7ce6e1901efd5abdb6b6b88f19bd1a481103e924ab2a44663"
}